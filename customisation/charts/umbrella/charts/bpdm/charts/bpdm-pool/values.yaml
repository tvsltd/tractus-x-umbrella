---
################################################################################
# Copyright (c) 2021,2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
################################################################################

nameOverride:
fullnameOverride:

replicaCount: 1

image:
  registry: docker.io
  repository: tractusx/bpdm-pool
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []

podAnnotations: {}

# Spring profiles under which the application should run
springProfiles: []

securityContext:
  seccompProfile:
    type: RuntimeDefault
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  readOnlyRootFilesystem: true
  runAsUser: 10001
  runAsGroup: 10001
  capabilities:
    drop:
      - ALL

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

autoscaling:
  enabled: false

ingress:
  enabled: false
  annotations: {}
  hosts: []
  tls: []

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 1Gi

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: DoesNotExist
          topologyKey: kubernetes.io/hostname

startupDelaySeconds: 90

livenessProbe:
  httpGet:
    path: "/actuator/health/liveness"
    port: 8080
    scheme: HTTP
  failureThreshold: 5
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

readinessProbe:
  httpGet:
    path: "/actuator/health/readiness"
    port: 8080
    scheme: HTTP
  failureThreshold: 5
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

startupProbe:
  httpGet:
    path: "/actuator/health/readiness"
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 30
  failureThreshold: 40
  periodSeconds: 5
  timeoutSeconds: 1
  successThreshold: 1

applicationConfig:

applicationSecrets:
  spring:
    dataSource:
      # Change this password for production
      password: &postgresPass  bpdm

postgres:
  enabled: false
  auth:
    database: bpdm
    username: bpdm
    password: *postgresPass

centralidp:
  enabled: true